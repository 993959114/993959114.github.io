<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>赵兴磊Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://schoderzhao.github.io/"/>
  <updated>2020-07-14T10:07:56.298Z</updated>
  <id>https://schoderzhao.github.io/</id>
  
  <author>
    <name>Schoder</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>FastDfs详解</title>
    <link href="https://schoderzhao.github.io/2020/07/14/FastDfs%E8%AF%A6%E8%A7%A3/"/>
    <id>https://schoderzhao.github.io/2020/07/14/FastDfs%E8%AF%A6%E8%A7%A3/</id>
    <published>2020-07-14T03:06:07.064Z</published>
    <updated>2020-07-14T10:07:56.298Z</updated>
    
    <content type="html"><![CDATA[<h1 id="FastDfs介绍"><a href="#FastDfs介绍" class="headerlink" title="FastDfs介绍"></a>FastDfs介绍</h1><h2 id="分布式文件系统"><a href="#分布式文件系统" class="headerlink" title="分布式文件系统"></a>分布式文件系统</h2><p>静态资源服务器</p><p>图片服务器(在分布式环境中，部署多个同样的系统可以共享。多个不一样的系统也可以共</p><p>享资源)。</p><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>什么是FastDFS</p><p>FastDFS是用c语言编写的一款开源的分布式文件系统。FastDFS为互</p><p>联网量身定制，充分考虑了冗余备份、负载均衡、线性扩容等机制，并</p><p>注重高可用、高性能等指标，使用FastDFS很容易搭建一套高性能的文</p><p>件服务器集群提供文件上传、下载等服务。</p><p>FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存</p><p>储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问</p><p>题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。</p><p><a href="https://baike.baidu.com/item/fastdfs" target="_blank" rel="noopener">https://baike.baidu.com/item/fastdfs</a></p><p>和之前对比，把上传的位置做了变化。这次把图片上传到远程的图片服务器。分布式共享。</p><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2020/07/14/FastDfs%E8%AF%A6%E8%A7%A3/1.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p>文件上传时序图：(按照时间的请求顺序)</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2020/07/14/FastDfs%E8%AF%A6%E8%A7%A3/2.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p>在存储服务器上存储了具体的内容，返回给客户端的只是存储的地<br>址， 以后就拿这个远程的地址就可以访问到文件了。</p><p>下载文件时序图</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2020/07/14/FastDfs%E8%AF%A6%E8%A7%A3/3.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p>下载案例：<br><a href="http://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-9/v9.0.13/bin/apachetomcat-" target="_blank" rel="noopener">http://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-9/v9.0.13/bin/apachetomcat-</a><br>9.0.13.zip<br>有地址，部署在web服务器，就支持直接下载。<br>开源地址：<br><a href="https://github.com/happyfish100" target="_blank" rel="noopener">https://github.com/happyfish100</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2020/07/14/FastDfs%E8%AF%A6%E8%A7%A3/4.png" alt title>                </div>                <div class="image-caption"></div>            </figure>FastDfs安装<h1 id="FastDfs安装"><a href="#FastDfs安装" class="headerlink" title="FastDfs安装"></a>FastDfs安装</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>一台虚拟机来模拟，一个Tracker、一个Storage服务。配和nginx访问<br>图片。</p><p>(因为需要对外访问，最后可以通过域名访问到图片。)<br><a href="https://www.baidu.com/img/bd_logo1.png" target="_blank" rel="noopener">https://www.baidu.com/img/bd_logo1.png</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2020/07/14/FastDfs%E8%AF%A6%E8%A7%A3/5.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p>下载:<a href="https://github.com/happyfish100" target="_blank" rel="noopener">https://github.com/happyfish100</a></p><h2 id="初始环境"><a href="#初始环境" class="headerlink" title="初始环境"></a>初始环境</h2><p>所需软件: 链接 <a href="https://pan.baidu.com/s/1DcUH0TngCiR2LAsLxHWZIg" target="_blank" rel="noopener">https://pan.baidu.com/s/1DcUH0TngCiR2LAsLxHWZIg</a> 提取码 mfdp</p><p>软件上传：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2020/07/14/FastDfs%E8%AF%A6%E8%A7%A3/6.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p>在线安装libevent工具包：<br>确认是否安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep libevent</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2020/07/14/FastDfs%E8%AF%A6%E8%A7%A3/7.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p>（已安装不需要装,没有安装需要装）</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2020/07/14/FastDfs%E8%AF%A6%E8%A7%A3/8.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install libevent</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2020/07/14/FastDfs%E8%AF%A6%E8%A7%A3/9.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="安装libfastcommon工具包"><a href="#安装libfastcommon工具包" class="headerlink" title="安装libfastcommon工具包"></a>安装libfastcommon工具包</h3><p>解压缩: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip libfastcommon-master.zip</span><br></pre></td></tr></table></figure><p>若unzip命令没找到:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install -y unzip zip</span><br><span class="line">.&#x2F;make.sh</span><br><span class="line">.&#x2F;make.sh install</span><br></pre></td></tr></table></figure><p>若32位目录中没有libfastcommon.so文件，就<br>把/usr/lib64/libfastcommon.so文件向/usr/lib/下复制一份<br>（新版红色框部分标示32位、64位目录都已安装。）</p><p>解压：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2020/07/14/FastDfs%E8%AF%A6%E8%A7%A3/10.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p>编译与安装：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2020/07/14/FastDfs%E8%AF%A6%E8%A7%A3/11.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p>观察：可以兼容32,64位系统</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2020/07/14/FastDfs%E8%AF%A6%E8%A7%A3/12.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="Tracker服务安装"><a href="#Tracker服务安装" class="headerlink" title="Tracker服务安装"></a>Tracker服务安装</h3><p>安装Tracker服务,这只是一个监听服务。<br>1)解压缩: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip fastdfs-master.zip</span><br></pre></td></tr></table></figure><p>2)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;make.sh</span><br></pre></td></tr></table></figure><p>3)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;make.sh install</span><br></pre></td></tr></table></figure><p>:安装后在/usr/bin/目录下有以fdfs开头的文件<br>都是编译出来的。配置文件都放到/etc/fdfs文件夹<br>4)把/opt/qf/fastdfs/fastdfs-master/conf目录下的所有的配置文件<br>都复制到/etc/fdfs下(从源码的配置文件/opt/qf/fastdfs-soft/fastdfsmaster/<br>conf/*中复制)。 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp &#x2F;opt&#x2F;qf&#x2F;fastdfs&#x2F;fastdfs-master&#x2F;conf&#x2F;* &#x2F;etc&#x2F;fdfs&#x2F;</span><br></pre></td></tr></table></figure><p>5)配置tracker服务。修改/ etc/fdfs /tracker.conf文件。<br>base_path=/home/shuju/fastdfs[手动创建目录]<br>http.server_port=85<br>6)启动tracker。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;bin&#x2F;fdfs_trackerd &#x2F;etc&#x2F;fdfs&#x2F;tracker.conf</span><br></pre></td></tr></table></figure><p>重启使用命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;bin&#x2F;fdfs_trackerd &#x2F;etc&#x2F;fdfs&#x2F;tracker.conf</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">restart</span><br></pre></td></tr></table></figure><h3 id="Storage服务安装"><a href="#Storage服务安装" class="headerlink" title="Storage服务安装"></a>Storage服务安装</h3><p>安装storage服务,这个就是真正的存储服务。<br>如果是在不同的服务器安装，第三步的1~4需要重新执行。这里我们在<br>同样一台服务器，不再需要对源码进行重复的编译和安装,仅仅只需要<br>配置storage服务。修改/ etc/fdfs /storage.conf文件</p><p>Storage存储和日志存放路径:<br>base_path=/home/shuju/fastdfs<br>图片保持路径: store_path0=/home/shuju/fastdfs<br>指定Tracker服务器: tracker_server=101.21.26.229<br>:22122(阿里云使用外网IP,正常公司内部的正式服务器也只有内网IP)<br>http.server_port=85 # 此处需要和后面 nginx 监听端口保<br>持一致<br>启动storage服务<br>启动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;bin&#x2F;fdfs_storaged &#x2F;etc&#x2F;fdfs&#x2F;storage.conf</span><br></pre></td></tr></table></figure><p>日志/home/shuju/fdfs/logs/storaged.log 外网若链接不成功<br>改内网IP<br>重启:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;bin&#x2F;fdfs_storaged &#x2F;etc&#x2F;fdfs&#x2F;storage.conf</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">restart</span><br></pre></td></tr></table></figure><h3 id="链接成功-测试服务"><a href="#链接成功-测试服务" class="headerlink" title="链接成功,测试服务"></a>链接成功,测试服务</h3><p>测试需要使用客户端的配置文件，所以需要修改配置文<br>件/etc/fdfs/client.conf</p><p>客户端日志保持base_path=/home/shuju/fastdfs<br>指定Tracker服务器: tracker_server= 101.21.26.229<br>:22122(外网IP)<br>http.tracker_server_port=85 (配置nginx)</p><p><strong>测试指令一：</strong><br>指令的位置:/usr/bin<br>上传图片：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;fdfs_upload_file &#x2F;etc&#x2F;fdfs&#x2F;client.conf &#x2F;etc&#x2F;fdfs&#x2F;anti-steal.jpg</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2020/07/14/FastDfs%E8%AF%A6%E8%A7%A3/tp.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p>存储地址：<br>group1/M00/00/00/rBGMA1q4VqqATqNmAABdrZgsqUU938.jpg</p><p>真实地址：<br>服务器存储地址:/home/shuju/fastdfs/data/00/00</p><p><strong>测试指令二：</strong><br>上传图片：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;fdfs_test &#x2F;etc&#x2F;fdfs&#x2F;client.conf upload &#x2F;etc&#x2F;fdfs&#x2F;anti-steal.jpg</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2020/07/14/FastDfs%E8%AF%A6%E8%A7%A3/xxx.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p>显示有完整url ：<br><a href="http://192.168.132.134:85/group1/M00/00/00/wKiEhlvUNWWAAjA5AAFl0YAhvnQ243.jpg" target="_blank" rel="noopener">http://192.168.132.134:85/group1/M00/00/00/wKiEhlvUNWWAAjA5AAFl0YAhvnQ243.jpg</a><br>这个路径是后来可以通过域名的方式直接访问</p><p>注意：防火墙放行：22122 23000 两个端口</p><p>通过java程序实现上传下载具体代码:</p><p><a href="https://github.com/SchoderZhao/fastdfsDemo" target="_blank" rel="noopener">https://github.com/SchoderZhao/fastdfsDemo</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;FastDfs介绍&quot;&gt;&lt;a href=&quot;#FastDfs介绍&quot; class=&quot;headerlink&quot; title=&quot;FastDfs介绍&quot;&gt;&lt;/a&gt;FastDfs介绍&lt;/h1&gt;&lt;h2 id=&quot;分布式文件系统&quot;&gt;&lt;a href=&quot;#分布式文件系统&quot; class=&quot;he
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Spring事务传播行为种类</title>
    <link href="https://schoderzhao.github.io/2020/06/17/Spring%E4%BA%8B%E5%8A%A1%E4%BC%A0%E6%92%AD%E8%A1%8C%E4%B8%BA%E7%A7%8D%E7%B1%BB/"/>
    <id>https://schoderzhao.github.io/2020/06/17/Spring%E4%BA%8B%E5%8A%A1%E4%BC%A0%E6%92%AD%E8%A1%8C%E4%B8%BA%E7%A7%8D%E7%B1%BB/</id>
    <published>2020-06-17T02:33:11.398Z</published>
    <updated>2020-06-17T02:58:12.683Z</updated>
    
    <content type="html"><![CDATA[<hr><p>title: Spring事务传播行为种类<br>date: 2020-06-17 10:33:11</p><h2 id="tags-Sprig"><a href="#tags-Sprig" class="headerlink" title="tags:Sprig"></a>tags:Sprig</h2><h3 id="Spring在TransactionDefinition接口中规定了7种类型的事务传播行为，它们规定了事务方法和事务方法发生嵌套调用时事务如何进行传播："><a href="#Spring在TransactionDefinition接口中规定了7种类型的事务传播行为，它们规定了事务方法和事务方法发生嵌套调用时事务如何进行传播：" class="headerlink" title="Spring在TransactionDefinition接口中规定了7种类型的事务传播行为，它们规定了事务方法和事务方法发生嵌套调用时事务如何进行传播："></a>Spring在TransactionDefinition接口中规定了7种类型的事务传播行为，它们规定了事务方法和事务方法发生嵌套调用时事务如何进行传播：</h3><table><thead><tr><th>事务传播行为类型</th><th>说明</th></tr></thead><tbody><tr><td>PROPAGATION_REQUIRED</td><td>如果当前没有事务，就新建一个事务，如果已经存在一个事务中，加入到这个事务中。这是最常见的选择。</td></tr><tr><td>PROPAGATION_SUPPORTS</td><td>支持当前事务，如果当前没有事务，就以非事务方式执行。</td></tr><tr><td>PROPAGATION_MANDATORY</td><td>使用当前的事务，如果当前没有事务，就抛出异常。</td></tr><tr><td>PROPAGATION_REQUIRES_NEW</td><td>新建事务，如果当前存在事务，把当前事务挂起。</td></tr><tr><td>PROPAGATION_NOT_SUPPORTED</td><td>以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。</td></tr><tr><td>PROPAGATION_NEVER</td><td>以非事务方式执行，如果当前存在事务，则抛出异常。</td></tr><tr><td>PROPAGATION_NESTED</td><td>如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则执行与PROPAGATION_REQUIRED类似的操作。</td></tr></tbody></table><p>当使用PROPAGATION_NESTED时，底层的数据源必须基于JDBC 3.0，并且实现者需要支持保存点事务机制。</p><p>@Transactional(propagation=Propagation.REQUIRED) 事务传播行为种类（注解方式）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;title: Spring事务传播行为种类&lt;br&gt;date: 2020-06-17 10:33:11&lt;/p&gt;
&lt;h2 id=&quot;tags-Sprig&quot;&gt;&lt;a href=&quot;#tags-Sprig&quot; class=&quot;headerlink&quot; title=&quot;tags:Spri
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>git使用</title>
    <link href="https://schoderzhao.github.io/2020/06/16/git%E4%BD%BF%E7%94%A8/"/>
    <id>https://schoderzhao.github.io/2020/06/16/git%E4%BD%BF%E7%94%A8/</id>
    <published>2020-06-16T08:55:30.409Z</published>
    <updated>2020-06-16T09:39:55.491Z</updated>
    
    <content type="html"><![CDATA[<h1 id="git-基本操作"><a href="#git-基本操作" class="headerlink" title="git 基本操作"></a>git 基本操作</h1><p>1、创建一个项目</p><p>2、打开项目   在项目目录下右键单击–打开 git bash</p><p>3、初始化项目仓库   创建项目仓库</p><p>命令 ： git init</p><p>git config –global user.name &lt;名字&gt; ———&gt;:配置用户名</p><p>git config –global user.email &lt;邮箱&gt;———&gt;：配置邮箱</p><p>git config –list ———&gt;：查看配置信息</p><p>git config –global user.name  ———&gt;：查看用户名</p><p>git config –global user.email ——–&gt; :查看邮箱</p><p>git status  查看文件是否被git管理</p><p>4、添加文件   </p><p>  git add 文件名   一次只能添加一个文件</p><p>  全部添加 ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add ./--all/-A/*</span><br></pre></td></tr></table></figure><p>5、提交</p><p>   git commit -m”日志描述”</p><p>6、项目文件内容如果有变动  先 git add . 再 git commit -m”日志”</p><p>7、git log 查看项目日志</p><p>8、回退操作  </p><p>  git reset –hard 前六位编码</p><p>9、恢复手动删除的文件  git checkout 提交生成码 文件名</p><h1 id="分支操作-："><a href="#分支操作-：" class="headerlink" title="分支操作 ："></a>分支操作 ：</h1><p>1、查看分支  git branch</p><p>2、创建分支  git branch 分支名</p><p>3、切换分支  git checkout 分支名</p><p>4、删除分支  git branch -d 分支名</p><p>5、合并分支  git merge  分支名</p><p>多人协作开发(接下来用张三、李四、CTO三人来演示工作中的流程)：</p><p>1、张三克隆文件：git clone &lt;地址&gt; 文件夹名称</p><p>2、李四克隆文件：git clone &lt;地址&gt; 文件夹名称</p><p>3、张三在开发过程中需要解决BUG</p><p>4、李四在开发过程中需要开发新的功能</p><h1 id="张三解决BUG并提交文件："><a href="#张三解决BUG并提交文件：" class="headerlink" title="张三解决BUG并提交文件："></a>张三解决BUG并提交文件：</h1><p>1、创建子分支：git branch zhangsan</p><p>2、切换子分支：git checkout zhangsan</p><p>3、提交到暂存区：git add index.html</p><p>4、提交到版本库：git commit -m “张三提交”</p><p>5、关联远程分支：git push –set-upstream origin zhangsan (这一步只需第一次的时候这样做即可，第二次修改文件的时候就可以直接执行第6步)</p><p>6、提交文件：git push</p><h1 id="CTO合并文件："><a href="#CTO合并文件：" class="headerlink" title="CTO合并文件："></a>CTO合并文件：</h1><p>1、更新本地的分支：git fetch –all</p><p>2、切换子分支：git checkout zhangsan</p><p>3、切换主分支：git checkout master</p><p>4、合并文件：git merge zhangsan   (：wq 按下回车)</p><p>5、提交到远端：git push</p><p>6、删除子分支：git checkout -d zhangsan  (不需要操作 )</p><h1 id="李四开发新的功能，但是李四的文件还是以前有bug的文件，因此我们需要最新的代码："><a href="#李四开发新的功能，但是李四的文件还是以前有bug的文件，因此我们需要最新的代码：" class="headerlink" title="李四开发新的功能，但是李四的文件还是以前有bug的文件，因此我们需要最新的代码："></a>李四开发新的功能，但是李四的文件还是以前有bug的文件，因此我们需要最新的代码：</h1><p>1、创建并切换子分支：git checkout -b lisi</p><p>fle</p><p>2、将开发好的新功能提交到版本库：git add index.html    git commit -m “李四提交”</p><p>3、切换主分支：git checkout master</p><p>4、将远端最新的代码拉取下来：git pull</p><p>5、切换子分支：git checkout lisi</p><p>6、合并主分支文件：git merge master</p><p>7、退出文件：esc 输入wq</p><p>8、提交到远端：git push –set-upstream origin lisi</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;git-基本操作&quot;&gt;&lt;a href=&quot;#git-基本操作&quot; class=&quot;headerlink&quot; title=&quot;git 基本操作&quot;&gt;&lt;/a&gt;git 基本操作&lt;/h1&gt;&lt;p&gt;1、创建一个项目&lt;/p&gt;
&lt;p&gt;2、打开项目   在项目目录下右键单击–打开 git bas
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Maven中scope标签作用</title>
    <link href="https://schoderzhao.github.io/2020/06/16/Maven%E4%B8%ADscope%E6%A0%87%E7%AD%BE%E4%BD%9C%E7%94%A8/"/>
    <id>https://schoderzhao.github.io/2020/06/16/Maven%E4%B8%ADscope%E6%A0%87%E7%AD%BE%E4%BD%9C%E7%94%A8/</id>
    <published>2020-06-16T08:41:12.055Z</published>
    <updated>2020-07-14T03:15:16.099Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="Maven中scope标签作用"><a href="#Maven中scope标签作用" class="headerlink" title="Maven中scope标签作用"></a>Maven中scope标签作用</h1><p>scope 是用来限制 dependency 的作用范围的，影响 maven 项目在各个生命周期时导入的 package 的状态，主要管理依赖的部署。</p><h2 id="scope-的作用范围："><a href="#scope-的作用范围：" class="headerlink" title="scope 的作用范围："></a>scope 的作用范围：</h2><p>（1）compile：默认值，适用于所有阶段（表明该 jar 包在编译、运行以及测试中路径均可见），并且会随着项目一起发布。</p><p>（2）test：只在测试时使用，用于编译和运行测试代码，不会随项目发布。</p><p>（3）runtime：无需参与项目的编译，不过后期的测试和运行周期需要其参与，与 compile 相比，跳过了编译。如 JDBC 驱动，适用运行和测试阶段。</p><p>（4）provided：编译和测试时有效，但是该依赖在运行时由服务器提供，并且打包时也不会被包含进去。如 servlet-api。</p><p>（5）system：类似 provided，需要显式提供包含依赖的jar，不会从 maven 仓库下载，而是从本地文件系统获取，需要添加 systemPath 的属性来定义路径。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h1 id=&quot;Maven中scope标签作用&quot;&gt;&lt;a href=&quot;#Maven中scope标签作用&quot; class=&quot;headerlink&quot; title=&quot;Maven中scope标签作用&quot;&gt;&lt;/a&gt;Maven中scope标签作用&lt;/h1&gt;&lt;p&gt;scope 是用来限制 d
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>java</title>
    <link href="https://schoderzhao.github.io/2020/06/15/java/"/>
    <id>https://schoderzhao.github.io/2020/06/15/java/</id>
    <published>2020-06-15T08:34:57.000Z</published>
    <updated>2020-06-15T08:34:57.440Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
</feed>
